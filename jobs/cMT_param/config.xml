<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.Read:darenyao</permission>
      <permission>hudson.model.Item.Read:jeremyhong</permission>
      <permission>hudson.model.Item.Read:edgarlee</permission>
      <permission>hudson.model.Item.Read:paul</permission>
      <permission>hudson.model.Item.Read:zen</permission>
      <permission>hudson.model.Item.Read:yichengchen</permission>
      <permission>hudson.model.Item.Read:user</permission>
      <permission>hudson.model.Item.Read:easonwu</permission>
      <permission>hudson.model.Item.Discover:darenyao</permission>
      <permission>hudson.model.Item.Discover:jeremyhong</permission>
      <permission>hudson.model.Item.Discover:edgarlee</permission>
      <permission>hudson.model.Item.Discover:paul</permission>
      <permission>hudson.model.Item.Discover:zen</permission>
      <permission>hudson.model.Item.Discover:yichengchen</permission>
      <permission>hudson.model.Item.Discover:user</permission>
      <permission>hudson.model.Item.Discover:easonwu</permission>
      <permission>hudson.model.Item.Build:darenyao</permission>
      <permission>hudson.model.Item.Build:jeremyhong</permission>
      <permission>hudson.model.Item.Build:edgarlee</permission>
      <permission>hudson.model.Item.Build:paul</permission>
      <permission>hudson.model.Item.Build:zen</permission>
      <permission>hudson.model.Item.Build:yichengchen</permission>
      <permission>hudson.model.Item.Build:user</permission>
      <permission>hudson.model.Item.Build:easonwu</permission>
      <permission>hudson.model.Item.Cancel:darenyao</permission>
      <permission>hudson.model.Item.Cancel:jeremyhong</permission>
      <permission>hudson.model.Item.Cancel:edgarlee</permission>
      <permission>hudson.model.Item.Cancel:paul</permission>
      <permission>hudson.model.Item.Cancel:zen</permission>
      <permission>hudson.model.Item.Cancel:yichengchen</permission>
      <permission>hudson.model.Item.Cancel:user</permission>
      <permission>hudson.model.Item.Cancel:easonwu</permission>
      <permission>hudson.model.Item.Workspace:darenyao</permission>
      <permission>hudson.model.Item.Workspace:jeremyhong</permission>
      <permission>hudson.model.Item.Workspace:edgarlee</permission>
      <permission>hudson.model.Item.Workspace:paul</permission>
      <permission>hudson.model.Item.Workspace:zen</permission>
      <permission>hudson.model.Item.Workspace:yichengchen</permission>
      <permission>hudson.model.Item.Workspace:user</permission>
      <permission>hudson.model.Item.Workspace:easonwu</permission>
      <permission>hudson.model.Item.Delete:darenyao</permission>
      <permission>hudson.model.Item.Delete:jeremyhong</permission>
      <permission>hudson.model.Item.Delete:edgarlee</permission>
      <permission>hudson.model.Item.Delete:paul</permission>
      <permission>hudson.model.Item.Delete:zen</permission>
      <permission>hudson.model.Item.Delete:yichengchen</permission>
      <permission>hudson.model.Item.Delete:user</permission>
      <permission>hudson.model.Item.Delete:easonwu</permission>
      <permission>hudson.model.Item.Configure:darenyao</permission>
      <permission>hudson.model.Item.Configure:jeremyhong</permission>
      <permission>hudson.model.Item.Configure:edgarlee</permission>
      <permission>hudson.model.Item.Configure:paul</permission>
      <permission>hudson.model.Item.Configure:zen</permission>
      <permission>hudson.model.Item.Configure:yichengchen</permission>
      <permission>hudson.model.Item.Configure:user</permission>
      <permission>hudson.model.Item.Configure:easonwu</permission>
      <permission>hudson.model.Run.Update:darenyao</permission>
      <permission>hudson.model.Run.Update:jeremyhong</permission>
      <permission>hudson.model.Run.Update:edgarlee</permission>
      <permission>hudson.model.Run.Update:paul</permission>
      <permission>hudson.model.Run.Update:zen</permission>
      <permission>hudson.model.Run.Update:yichengchen</permission>
      <permission>hudson.model.Run.Update:user</permission>
      <permission>hudson.model.Run.Update:easonwu</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>TRIGGER_PARAM_PLATFORM</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>cMT3000</string>
              <string>cMT-SVR</string>
              <string>cMT-iv5</string>
              <string>Ubuntu</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>TRIGGER_PARAM_INSTALL_FOLDER</name>
          <description></description>
          <defaultValue>build-dev-branch</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>TRIGGER_PARAM_BASE_INSTALL_FOLDER</name>
          <description></description>
          <defaultValue>build-dev-branch</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>TRIGGER_PARAM_LIBWEINTEK_BRANCH</name>
          <description></description>
          <defaultValue>dev</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>TRIGGER_PARAM_DSERVER_BRANCH</name>
          <description></description>
          <defaultValue>dev</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>TRIGGER_PARAM_GUI_BRANCH</name>
          <description></description>
          <defaultValue>dev</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>TRIGGER_PARAM_LIBWEINTEK_BUILD_POLICY</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>incremental</string>
              <string>clean</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>TRIGGER_PARAM_DSERVER_BUILD_POLICY</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>incremental</string>
              <string>clean</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>TRIGGER_PARAM_GUI_BUILD_POLICY</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>incremental</string>
              <string>clean</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.5">
    <scms>
      <hudson.plugins.git.GitSCM plugin="git@2.4.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>gitolite@192.168.1.220:libweintek.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/${TRIGGER_PARAM_LIBWEINTEK_BRANCH}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>libweintek</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@2.4.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>gitolite@192.168.1.220:d-server.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/${TRIGGER_PARAM_DSERVER_BRANCH}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>dserver</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@2.4.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>gitolite@192.168.1.220:gui.qt4.graphicsview.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/${TRIGGER_PARAM_GUI_BRANCH}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>gui</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
      </hudson.plugins.git.GitSCM>
    </scms>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H H(0-7) * * *</spec>
    </hudson.triggers.TimerTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>H/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.core.TimeCondition" plugin="run-condition@1.0">
        <earliestHours>0</earliestHours>
        <earliestMinutes>0</earliestMinutes>
        <latestHours>8</latestHours>
        <latestMinutes>0</latestMinutes>
        <useBuildTime>true</useBuildTime>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command># Make clean builds for daily builds by removing build folder

rm -rf ${WORKSPACE}/libweintek/build/jenkins
rm -rf ${WORKSPACE}/dserver/build/jenkins
rm -rf ${WORKSPACE}/gui/build/jenkins</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <hudson.tasks.Shell>
      <command># Setup environment for builds

cd ${WORKSPACE}

rm -rf artifacts
mkdir artifacts

rm -rf cppcheck
mkdir cppcheck

rm -rf gtest
mkdir gtest

cd /home/ci/work/${TRIGGER_PARAM_PLATFORM}
if [ ! -d &quot;${TRIGGER_PARAM_INSTALL_FOLDER}&quot; ]; then
    cp -r ${TRIGGER_PARAM_BASE_INSTALL_FOLDER} ${TRIGGER_PARAM_INSTALL_FOLDER}
fi
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Do static analysis by cppcheck
echo &quot;================================ cppcheck ================================ cppcheck ================================ cppcheck ================================&quot;

cd ${WORKSPACE}/cppcheck

cppcheck --enable=all --inconclusive --suppress=syntaxError --xml --xml-version=2 ${WORKSPACE}/libweintek/weintek ${WORKSPACE}/dserver/dserver ${WORKSPACE}/gui/got 2&gt; cppcheck-result.xml</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Build libweintek
echo &quot;================================ libweintek ================================ libweintek ================================ libweintek ================================&quot;

cd ${WORKSPACE}/libweintek/build
if [ ! -d &quot;jenkins&quot; ]; then
    mkdir jenkins
fi
cd jenkins

export LIBWEINTEK_PATH=${WORKSPACE}/libweintek
export INSTALL_PREFIX=/home/ci/work/${TRIGGER_PARAM_PLATFORM}/${TRIGGER_PARAM_INSTALL_FOLDER}
${WORKSPACE}/libweintek/build/${TRIGGER_PARAM_PLATFORM}/cmake_libweintek.sh ${LIBWEINTEK_PATH} ${INSTALL_PREFIX}
    
if [ &quot;${TRIGGER_PARAM_LIBWEINTEK_BUILD_POLICY}&quot; = &quot;clean&quot; ]; then
    make clean
fi
make install</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Build dserver
echo &quot;================================ dserver ================================ dserver ================================ dserver ================================&quot;

cd ${WORKSPACE}/dserver/build
if [ ! -d &quot;jenkins&quot; ]; then
    mkdir jenkins
fi
cd jenkins

export DSERVER_PATH=${WORKSPACE}/dserver
export LIBWEINTEK_PATH=${WORKSPACE}/libweintek
export INSTALL_PREFIX=/home/ci/work/${TRIGGER_PARAM_PLATFORM}/${TRIGGER_PARAM_INSTALL_FOLDER}
${WORKSPACE}/dserver/build/${TRIGGER_PARAM_PLATFORM}/cmake_dserver.sh ${DSERVER_PATH} ${LIBWEINTEK_PATH} ${INSTALL_PREFIX}

if [ &quot;${TRIGGER_PARAM_DSERVER_BUILD_POLICY}&quot; = &quot;clean&quot; ]; then
    make clean
fi
make install/strip

if [ &quot;${TRIGGER_PARAM_PLATFORM}&quot; = &quot;cMT-SVR&quot; ]; then
	export ENCRYPT_NAME=dserver.cmt
elif [ &quot;${TRIGGER_PARAM_PLATFORM}&quot; = &quot;cMT-iv5&quot; ]; then
	export ENCRYPT_NAME=dserver.iv5
else
	export ENCRYPT_NAME=dserver.c30
fi

cd ${INSTALL_PREFIX}/bin
/home/ci/work/crypto e dserver ${ENCRYPT_NAME}
cp ${INSTALL_PREFIX}/bin/${ENCRYPT_NAME} ${WORKSPACE}/artifacts</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.logic.Not" plugin="run-condition@1.0">
        <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
          <arg1>${TRIGGER_PARAM_PLATFORM}</arg1>
          <arg2>cMT-SVR</arg2>
          <ignoreCase>false</ignoreCase>
        </condition>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command># Build gui
echo &quot;================================ gui ================================ gui ================================ gui ================================&quot;

cd ${WORKSPACE}/gui/build
if [ ! -d &quot;jenkins&quot; ]; then
    mkdir jenkins
fi
cd jenkins

export GUI_PATH=${WORKSPACE}/gui
export DSERVER_PATH=${WORKSPACE}/dserver
export LIBWEINTEK_PATH=${WORKSPACE}/libweintek
export INSTALL_PREFIX=/home/ci/work/${TRIGGER_PARAM_PLATFORM}/${TRIGGER_PARAM_INSTALL_FOLDER}

cp ${WORKSPACE}/gui/build/${TRIGGER_PARAM_PLATFORM}/features.pri .
${WORKSPACE}/gui/build/${TRIGGER_PARAM_PLATFORM}/qmake_gui.sh ${GUI_PATH} ${LIBWEINTEK_PATH} ${DSERVER_PATH} ${INSTALL_PREFIX} ${TRIGGER_PARAM_GUI_BUILD_POLICY}

cp ${INSTALL_PREFIX}/bin/gui.c30 ${WORKSPACE}/artifacts</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${TRIGGER_PARAM_PLATFORM}</arg1>
        <arg2>Ubuntu</arg2>
        <ignoreCase>false</ignoreCase>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command># Build gui
echo &quot;================================ unit-test ================================ unit-test ================================ unit-test ================================&quot;

cd ${WORKSPACE}/gui/build
if [ ! -d &quot;gtest&quot; ]; then
    mkdir gtest
fi
cd gtest

export INSTALL_PREFIX=/home/ci/work/${TRIGGER_PARAM_PLATFORM}/${TRIGGER_PARAM_INSTALL_FOLDER}
${INSTALL_PREFIX}/bin/test-libweintek --gtest_output=xml:gtest-libweintek.xml
${INSTALL_PREFIX}/bin/test-dserver --gtest_output=xml:gtest-dserver.xml
${INSTALL_PREFIX}/bin/test-got --gtest_output=xml:gtest-got.xml</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>artifacts/*.*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <org.jenkinsci.plugins.cppcheck.CppcheckPublisher plugin="cppcheck@1.21">
      <cppcheckConfig>
        <pattern>cppcheck/cppcheck-*.xml</pattern>
        <ignoreBlankFiles>false</ignoreBlankFiles>
        <allowNoReport>false</allowNoReport>
        <configSeverityEvaluation>
          <threshold></threshold>
          <newThreshold></newThreshold>
          <failureThreshold>854</failureThreshold>
          <newFailureThreshold>1</newFailureThreshold>
          <healthy></healthy>
          <unHealthy></unHealthy>
          <severityError>true</severityError>
          <severityWarning>true</severityWarning>
          <severityStyle>true</severityStyle>
          <severityPerformance>true</severityPerformance>
          <severityInformation>true</severityInformation>
          <severityNoCategory>true</severityNoCategory>
          <severityPortability>true</severityPortability>
        </configSeverityEvaluation>
        <configGraph>
          <xSize>500</xSize>
          <ySize>200</ySize>
          <numBuildsInGraph>0</numBuildsInGraph>
          <displayAllErrors>true</displayAllErrors>
          <displayErrorSeverity>true</displayErrorSeverity>
          <displayWarningSeverity>true</displayWarningSeverity>
          <displayStyleSeverity>true</displayStyleSeverity>
          <displayPerformanceSeverity>true</displayPerformanceSeverity>
          <displayInformationSeverity>true</displayInformationSeverity>
          <displayNoCategorySeverity>true</displayNoCategorySeverity>
          <displayPortabilitySeverity>true</displayPortabilitySeverity>
        </configGraph>
      </cppcheckConfig>
    </org.jenkinsci.plugins.cppcheck.CppcheckPublisher>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.10">
      <testResults>gtest/gtest-*.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>true</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.16">
      <recipients>memberA@weintek.com memberB@weintek.com </recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>