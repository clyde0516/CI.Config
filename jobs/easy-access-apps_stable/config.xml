<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.6">
  <actions/>
  <description>build easy access 2.0 master-app, weintek-p2p</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition plugin="matrix-combinations-parameter@1.0.9">
          <name>PLATFORMS_TO_BUILD</name>
          <description></description>
        </hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TRIGGER_PARAM_BRANCH</name>
          <description></description>
          <defaultValue>stable</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TRIGGER_PARAM_JOB_GROUP</name>
          <description></description>
          <defaultValue>stable</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>TRIGGER_PARAM_GUI_BUILD_POLICY</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>incremental</string>
              <string>clean</string>
              <string>brandnew</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>90</daysToKeep>
        <numToKeep>300</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.5">
    <scms>
      <hudson.plugins.git.GitSCM plugin="git@2.4.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>gitolite@192.168.1.220:rma.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/${TRIGGER_PARAM_BRANCH}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>rma</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@2.4.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>gitolite@192.168.1.220:RemoteAccess.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/${TRIGGER_PARAM_BRANCH}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>RemoteAccess</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@2.4.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>gitolite@192.168.1.220:campagnol.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/${TRIGGER_PARAM_BRANCH}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>weintek-p2p</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
      </hudson.plugins.git.GitSCM>
    </scms>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>libweintek_stable</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>H/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>MATRIX_AXIS_PLATFORM</name>
      <values>
        <string>android-arm</string>
        <string>win32</string>
      </values>
    </hudson.matrix.TextAxis>
    <org.jenkinsci.plugins.elasticaxisplugin.ElasticAxis plugin="elastic-axis@1.2">
      <name>MATRIX_AXIS_NODE</name>
      <values>
        <string>master</string>
        <string>windows</string>
      </values>
      <label>linux,windows</label>
      <ignoreOffline>false</ignoreOffline>
    </org.jenkinsci.plugins.elasticaxisplugin.ElasticAxis>
  </axes>
  <combinationFilter>(MATRIX_AXIS_NODE == &quot;windows&quot; &amp;&amp; MATRIX_AXIS_PLATFORM == &quot;win32&quot;) || (MATRIX_AXIS_NODE != &quot;windows&quot; &amp;&amp; MATRIX_AXIS_PLATFORM != &quot;win32&quot;)</combinationFilter>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${MATRIX_AXIS_PLATFORM}</arg1>
        <arg2>android-arm</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>#!/bin/bash

export BUILD_TYPE=Release
export LIBWEINTEK_PATH=${JENKINS_HOME}/jobs/libweintek_stable/workspace
#export INSTALL_PREFIX=/home/ci/work/android-arm/build-stable-branch
export INSTALL_PREFIX=/home/ci/work/${MATRIX_AXIS_PLATFORM}/build-${TRIGGER_PARAM_JOB_GROUP}-branch
export EA_PATH=${WORKSPACE}/RemoteAccess
export LIBWEINTEK_ROOT=${LIBWEINTEK_PATH}
export JAVA_HOME=/home/ci/jdk1.7.0_71
export ANDROID_HOME=/home/ci/Android/Sdk

#if [ &quot;${MATRIX_AXIS_PLATFORM}&quot; = &quot;android-arm&quot; ]; then
	export ANDROID_CMAKE_FILE=/home/ci/android-cmake/android.toolchain.cmake
	export ANDROID_SDK_ROOT=/home/ci/Android/Sdk
	export ANDROID_NDK_ROOT=/home/ci/Android/android-ndk
    export TOOLCHAIN=/home/ci/work/android-arm/target/sysroots/android-toolchain-arm
    export CC=${TOOLCHAIN}/bin/arm-linux-androideabi-gcc
    export CXX=${TOOLCHAIN}/bin/arm-linux-androideabi-g++
    export QT_ROOT=/opt/Qt5.5.1/5.5/android_armv7
#fi

# build weintek-p2p
cd ${WORKSPACE}/weintek-p2p
cp config_linux.h config.h
mkdir -p jenkins
mkdir -p android/WeintekP2P/app/src/main/jniLibs/armeabi-v7a

rm -rf android/WeintekP2P/app/src/main/AndroidManifest.xml
rm -rf android/WeintekP2P/app/src/main/java

cp -H android/AndroidManifest.xml android/WeintekP2P/app/src/main/AndroidManifest.xml
cp -rH android/java android/WeintekP2P/app/src/main

cd jenkins
cmake -DCMAKE_TOOLCHAIN_FILE=${ANDROID_CMAKE_FILE} \
      -DANDROID_NDK=${ANDROID_NDK_ROOT}             \
      -DCMAKE_BUILD_TYPE=Release                     \
      -DCMAKE_INSTALL_PREFIX=${TOOLCHAIN}/sysroot/usr \
      -DANDROID_ABI=&quot;armeabi-v7a&quot;                      \
      ..

cd client
make install

cp ${TOOLCHAIN}/sysroot/usr/lib/libweintek_p2p.so ${WORKSPACE}/weintek-p2p/android/WeintekP2P/app/src/main/jniLibs/armeabi-v7a
cd ${WORKSPACE}/weintek-p2p/android/WeintekP2P
./gradlew assembleRelease

</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>#!/bin/bash

export BUILD_TYPE=Release
export LIBWEINTEK_PATH=${JENKINS_HOME}/jobs/libweintek_stable/workspace
#export INSTALL_PREFIX=/home/ci/work/android-arm/build-stable-branch
export INSTALL_PREFIX=/home/ci/work/${MATRIX_AXIS_PLATFORM}/build-${TRIGGER_PARAM_JOB_GROUP}-branch
export EA_PATH=${WORKSPACE}/RemoteAccess
export LIBWEINTEK_ROOT=${LIBWEINTEK_PATH}
export JAVA_HOME=/home/ci/jdk1.7.0_71

#if [ &quot;${MATRIX_AXIS_PLATFORM}&quot; = &quot;Android&quot; ]; then
	export ANDROID_CMAKE_FILE=/home/ci/android-cmake/android.toolchain.cmake
	export ANDROID_SDK_ROOT=/home/ci/Android/Sdk
	export ANDROID_NDK_ROOT=/home/ci/Android/android-ndk
    export TOOLCHAIN=/home/ci/work/android-arm/target/sysroots/android-toolchain-arm
    export CC=${TOOLCHAIN}/bin/arm-linux-androideabi-gcc
    export CXX=${TOOLCHAIN}/bin/arm-linux-androideabi-g++
    export QT_ROOT=/opt/Qt5.5.1/5.5/android_armv7
#fi


# build master app apk
cd ${WORKSPACE}
ln -sf /home/ci/work/libweintek-stable libweintek

cd ${EA_PATH}
mkdir ${INSTALL_PREFIX}/apk
ln -sf ../rma/AuthClient AuthClient
mkdir -p jenkins
cd jenkins

${QT_ROOT}/bin/qmake ${EA_PATH}/RemoteAccess.pro -r -spec android-g++ \
        WORK_SPACE_PATH=${WORKSPACE} \
        TOOLCHAIN_ROOT=/home/ci/work/android-arm/target/sysroots \
        BOOST_ROOT=/opt/boost_1_55_0
make install INSTALL_ROOT=${INSTALL_PREFIX}/apk

rm -rf ${QT_ROOT}/src/android/java/src/*
cp -rH ${QT_ROOT}/src/android/java_src_RemoteAccess/* ${QT_ROOT}/src/android/java/src
cp -rH ${QT_ROOT}/src/android/java/* ${INSTALL_PREFIX}/apk
${QT_ROOT}/bin/androiddeployqt --input ${EA_PATH}/jenkins/RemoteAccess/android-libEasyAccess.so-deployment-settings.json \
                               --output ${INSTALL_PREFIX}/apk \
                               --sign ${EA_PATH}/android/android_release_key.keystore weintek \
                               --storepass 1151511515 \
                               --keypass asdzxc123


</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>cd ${WORKSPACE}
rm -rf artifacts
mkdir artifacts

cp ${WORKSPACE}/weintek-p2p/android/WeintekP2P/app/build/outputs/apk/app-release.apk artifacts/weintek-p2p.apk

export INSTALL_PREFIX=/home/ci/work/android-arm/build-stable-branch
cp ${INSTALL_PREFIX}/apk/bin/QtApp*.apk artifacts/EasyAccess2.apk
</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${MATRIX_AXIS_NODE}-${MATRIX_AXIS_PLATFORM}</arg1>
        <arg2>windows-win32</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.BatchFile>
          <command>call &quot;C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\vcvarsall.bat&quot; x86&#xd;
&#xd;
set WORKSPACE_DIR=%cd%&#xd;
mkdir %WORKSPACE_DIR%\artifacts&#xd;
cd %WORKSPACE_DIR%\rma&#xd;
mkdir %WORKSPACE_DIR%\rma\build\vs2012&#xd;
cd %WORKSPACE_DIR%\rma\build\vs2012&#xd;
&#xd;
set LIBWEINTEK_ROOT=C:\jenkins\workspace\libweintek_stable\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32&#xd;
set PTHREAD_INCLUDE_DIR=C:\jenkins\workspace\libweintek_stable\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32\third-party\pthreads-w32-2-9-1\include&#xd;
set PTHREAD_LIB_DIR=C:\jenkins\workspace\libweintek_stable\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32\third-party\pthreads-w32-2-9-1\lib\x86&#xd;
set EXPAT_DIR=C:\jenkins\workspace\libweintek_stable\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32\third-party\expat-2.1.0&#xd;
set WINSOCK2_INCLUDE_DIR=C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Include&#xd;
set OPENSSL_INCLUDE_DIR=C:\DevEnv\OpenSSL-Win32\include&#xd;
set OPENSSL_LIB_DIR=C:\DevEnv\OpenSSL-Win32\lib\VC&#xd;
set CURL_INCLUDE_DIR=C:\DevEnv\curl-7.41.0\include&#xd;
set CURL_LIB_DIR=C:\DevEnv\curl-7.41.0\lib&#xd;
&#xd;
&quot;C:\Program Files (x86)\CMake\bin\cmake.exe&quot; -G &quot;Visual Studio 11 2012&quot; -DBUILD_SERVER=OFF -DBoost_INCLUDE_DIR=&quot;C:\DevEnv\boost_1_60_0&quot; ..\..&#xd;
msbuild.exe rma.sln /nologo /t:auth_client /p:Configuration=&quot;Release&quot; /property:Platform=&quot;Win32&quot;&#xd;
&#xd;
copy /y AuthClient\Release\auth_client.lib %LIBWEINTEK_ROOT%\lib</command>
        </hudson.tasks.BatchFile>
        <hudson.tasks.BatchFile>
          <command>call &quot;C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\vcvarsall.bat&quot; x86&#xd;
&#xd;
set WORKSPACE_DIR=%cd%&#xd;
set WORK_UTIL_DIR=c:\jenkins\work&#xd;
set LIBWEINTEK_DIR=C:\jenkins\workspace\libweintek_%TRIGGER_PARAM_JOB_GROUP%\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32&#xd;
set OPENSSL_DIR=C:\DevEnv\OpenSSL-Win32&#xd;
set RMA_DIR=%WORKSPACE_DIR%\rma&#xd;
&#xd;
mkdir %WORKSPACE_DIR%\artifacts&#xd;
cd %WORKSPACE_DIR%\RemoteAccess&#xd;
rmdir /S /Q Win32\Release&#xd;
&#xd;
copy /y weintek.props.in weintek.props&#xd;
&#xd;
call %WORK_UTIL_DIR%\script\replace_string.bat &quot;weintek.props&quot; &quot;&lt;WEINTEKDIR&gt;..\..\libweintek&lt;/WEINTEKDIR&gt;&quot; &quot;&lt;WEINTEKDIR&gt;%LIBWEINTEK_DIR%&lt;/WEINTEKDIR&gt;&quot;&#xd;
call %WORK_UTIL_DIR%\script\replace_string.bat &quot;weintek.props&quot; &quot;&lt;RMADIR&gt;..\..\rma&lt;/RMADIR&gt;&quot; &quot;&lt;RMADIR&gt;%RMA_DIR%&lt;/RMADIR&gt;&quot;&#xd;
call %WORK_UTIL_DIR%\script\replace_string.bat &quot;weintek.props&quot; &quot;&lt;OPENSSLDIR&gt;C:\OpenSSL-Win32&lt;/OPENSSLDIR&gt;&quot; &quot;&lt;OPENSSLDIR&gt;%OPENSSL_DIR%&lt;/OPENSSLDIR&gt;&quot;&#xd;
&#xd;
msbuild.exe EasyAccess2.0.sln /nologo /t:Build /p:Configuration=&quot;Release&quot; /property:Platform=&quot;Win32&quot;&#xd;
&#xd;
copy /y &quot;Win32\Release\EasyAccess 2.0.exe&quot; %WORKSPACE_DIR%\artifacts&#xd;
</command>
        </hudson.tasks.BatchFile>
        <hudson.tasks.BatchFile>
          <command>call &quot;C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\vcvarsall.bat&quot; x86&#xd;
&#xd;
set WORKSPACE_DIR=%cd%&#xd;
mkdir %WORKSPACE_DIR%\artifacts&#xd;
cd %WORKSPACE_DIR%\weintek-p2p&#xd;
copy /y config_cygwin.h config.h&#xd;
mkdir %WORKSPACE_DIR%\weintek-p2p\build\vs2012&#xd;
cd %WORKSPACE_DIR%\weintek-p2p\build\vs2012&#xd;
&#xd;
set LIBWEINTEK_ROOT=C:\jenkins\workspace\libweintek_stable\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32&#xd;
set PTHREAD_INCLUDE_DIR=C:\jenkins\workspace\libweintek_stable\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32\third-party\pthreads-w32-2-9-1\include&#xd;
set PTHREAD_LIB_DIR=C:\jenkins\workspace\libweintek_stable\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32\third-party\pthreads-w32-2-9-1\lib\x86&#xd;
set EXPAT_DIR=C:\jenkins\workspace\libweintek_stable\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32\third-party\expat-2.1.0&#xd;
set WINSOCK2_INCLUDE_DIR=C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Include&#xd;
set OPENSSL_INCLUDE_DIR=C:\DevEnv\OpenSSL-Win32\include&#xd;
set OPENSSL_LIB_DIR=C:\DevEnv\OpenSSL-Win32\lib\VC&#xd;
&#xd;
&quot;C:\Program Files (x86)\CMake\bin\cmake.exe&quot; -G &quot;Visual Studio 11 2012&quot; -DCMAKE_INSTALL_PREFIX=%LIBWEINTEK_ROOT% -DBoost_INCLUDE_DIR=&quot;C:\DevEnv\boost_1_60_0&quot; ..\..&#xd;
msbuild.exe weintek-p2p.sln /nologo /t:Build /p:Configuration=&quot;Release&quot; /property:Platform=&quot;Win32&quot;&#xd;
&#xd;
copy /y client\Release\weintek-p2p.exe %WORKSPACE_DIR%\artifacts</command>
        </hudson.tasks.BatchFile>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>artifacts/*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.plugins.claim.ClaimPublisher plugin="claim@2.8"/>
    <hudson.tasks.Mailer plugin="mailer@1.16">
      <recipients>zen@weintek.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>