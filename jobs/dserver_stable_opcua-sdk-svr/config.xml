<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.6">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.scm.SCM.Tag:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:jeremyhong</permission>
      <permission>hudson.model.Item.Read:jeremyhong</permission>
      <permission>hudson.model.Item.ExtendedRead:jeremyhong</permission>
      <permission>hudson.model.Item.Workspace:jeremyhong</permission>
      <permission>hudson.model.Item.Configure:jeremyhong</permission>
      <permission>hudson.model.Run.Delete:jeremyhong</permission>
      <permission>hudson.model.Item.Discover:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:jeremyhong</permission>
      <permission>hudson.model.Item.Build:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:jeremyhong</permission>
      <permission>hudson.model.Item.Cancel:jeremyhong</permission>
      <permission>hudson.model.Item.Delete:jeremyhong</permission>
      <permission>hudson.model.Run.Update:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:jeremyhong</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition plugin="matrix-combinations-parameter@1.0.9">
          <name>PLATFORMS_TO_BUILD</name>
          <description></description>
        </hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TRIGGER_PARAM_DSERVER_BRANCH</name>
          <description></description>
          <defaultValue>dev_tag</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TRIGGER_PARAM_JOB_GROUP</name>
          <description></description>
          <defaultValue>stable</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>TRIGGER_PARAM_DSERVER_BUILD_POLICY</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>incremental</string>
              <string>clean</string>
              <string>brandnew</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>90</daysToKeep>
        <numToKeep>300</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>gitolite@192.168.1.220:opcserver</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/${TRIGGER_PARAM_DSERVER_BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>MATRIX_AXIS_PLATFORM</name>
      <values>
        <string>cMT-SVR</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.core.TimeCondition" plugin="run-condition@1.0">
        <earliestHours>0</earliestHours>
        <earliestMinutes>0</earliestMinutes>
        <latestHours>8</latestHours>
        <latestMinutes>0</latestMinutes>
        <useBuildTime>true</useBuildTime>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command>rm -rf ${WORKSPACE}/build/jenkins</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo ${WORKSPACE}
echo ${PWD}
echo &quot;aaaaaaaaaaaaaaaaaaaaaa&quot;


# /home/ci/work/cMT-SVR/build-stable-branch
export MY_INSTALL_PREFIX=/home/ci/work/${MATRIX_AXIS_PLATFORM}/build-${TRIGGER_PARAM_JOB_GROUP}-branch
export MY_OPCUA_ROOT_DIR=${WORKSPACE}/third-party/opcua-linux
export MY_TOOLCHAIN_FILE=${WORKSPACE}/Toolchain-arm-fsl-linux-gnueabi.cmake
export MY_BUILD_DIR=${WORKSPACE}/build/jenkins/${MATRIX_AXIS_PLATFORM}
export MY_CAMKE_FLAGS=-DBUILD_SHARED_STACK=OFF
export BUILD_TYPE=Release

# clear artifacts

rm -f ${INSTALL_PREFIX}/bin/dserver*
rm -rf ${WORKSPACE}/artifacts
mkdir ${WORKSPACE}/artifacts

# prepare out-of-source build

cd ${WORKSPACE}/build
if [ &quot;${TRIGGER_PARAM_DSERVER_BUILD_POLICY}&quot; = &quot;brandnew&quot; ]; then
    rm -rf jenkins/${MATRIX_AXIS_PLATFORM}
fi
if [ ! -d &quot;jenkins&quot; ]; then
    mkdir -p jenkins
fi
if [ ! -d &quot;jenkins/${MATRIX_AXIS_PLATFORM}&quot; ]; then
    mkdir -p jenkins/${MATRIX_AXIS_PLATFORM}
fi
cd jenkins/${MATRIX_AXIS_PLATFORM}

ls -alh ${WORKSPACE}/build/jenkins/${MATRIX_AXIS_PLATFORM}
echo &quot;MATRIX_AXIS_PLATFORM&quot; ${MATRIX_AXIS_PLATFORM}


# generate makefile
cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
      -DCMAKE_INSTALL_PREFIX=${MY_INSTALL_PREFIX} \
      -DCMAKE_TOOLCHAIN_FILE=${MY_TOOLCHAIN_FILE} \
      -DCMAKE_CXX_FLAGS=&quot;-std=gnu++0x&quot; \
      -DCMAKE_CXX_FLAGS_RELEASE=&quot;-O2 -DNDEBUG&quot; \
      -DCMAKE_C_FLAGS_RELEASE=&quot;-O2 -DNDEBUG&quot; \
      -DLINK_ICONV_EXPLICITLY=ON \
      -DUNIT_TEST=OFF \
      ${MY_CAMKE_FLAGS} \
      ${MY_OPCUA_ROOT_DIR}
      
# make
if [ &quot;${TRIGGER_PARAM_DSERVER_BUILD_POLICY}&quot; = &quot;clean&quot; ]; then
    make clean
fi
make install VERBOSE=1


echo &quot;aaaaaaaaaaaaaaaaaaaaaa&quot;

return 0










# export variables

export DSERVER_PATH=${WORKSPACE}
export LIBWEINTEK_PATH=${JENKINS_HOME}/jobs/libweintek_${TRIGGER_PARAM_JOB_GROUP}/workspace
export MARIADB_CONNECTOR_C_PATH=/home/ci/work/mariadb-connector-c
export INSTALL_PREFIX=/home/ci/work/${MATRIX_AXIS_PLATFORM}/build-${TRIGGER_PARAM_JOB_GROUP}-branch
export BUILD_TYPE=RelWithDebInfo

if [ &quot;${MATRIX_AXIS_PLATFORM}&quot; = &quot;cMT-SVR&quot; ]; then
    export GOOGLE_BREAKPAD_PATH=/home/ci/work/cMT-SVR/google-breakpad
fi

case $MATRIX_AXIS_PLATFORM in
    &quot;cMT3000&quot;)       export CROSS_COMPILER_TOOLCHAIN=/home/ci/work/cMT3000/target/environment-setup-armv7ahf-vfp-neon-weintek-linux-gnueabi  ;;
    &quot;cMT-iv5&quot;)       export CROSS_COMPILER_TOOLCHAIN=/home/ci/work/cMT-iv5/target/environment-setup-armv7ahf-vfp-neon-weintek-linux-gnueabi  ;;
    &quot;cMT-iv5-3000&quot;)  export CROSS_COMPILER_TOOLCHAIN=/home/ci/work/cMT3000/target/environment-setup-armv7ahf-vfp-neon-weintek-linux-gnueabi  ;;
esac

case $MATRIX_AXIS_PLATFORM in
    &quot;cMT-iv5-3000&quot;)  export PLATFORM_BUILD_FOLDER=cMT3000  ;;
    *)               export PLATFORM_BUILD_FOLDER=${MATRIX_AXIS_PLATFORM}  ;;
esac

case $MATRIX_AXIS_PLATFORM in
    &quot;cMT3000&quot;)       export ENCRYPT_EXTENSION_NAME=.c30  ;;
    &quot;cMT-SVR&quot;)       export ENCRYPT_EXTENSION_NAME=.cmt  ;;
    &quot;cMT-iv5&quot;)       export ENCRYPT_EXTENSION_NAME=.iv5  ;;
    &quot;cMT-iv5-3000&quot;)  export ENCRYPT_EXTENSION_NAME=.c30  ;;
esac

# clear artifacts

rm -f ${INSTALL_PREFIX}/bin/dserver*
rm -rf ${WORKSPACE}/artifacts
mkdir ${WORKSPACE}/artifacts

# prepare out-of-source build

cd ${DSERVER_PATH}/build
if [ &quot;${TRIGGER_PARAM_DSERVER_BUILD_POLICY}&quot; = &quot;brandnew&quot; ]; then
    rm -rf jenkins/${MATRIX_AXIS_PLATFORM}
fi
if [ ! -d &quot;jenkins&quot; ]; then
    mkdir -p jenkins
fi
if [ ! -d &quot;jenkins/${MATRIX_AXIS_PLATFORM}&quot; ]; then
    mkdir -p jenkins/${MATRIX_AXIS_PLATFORM}
fi
cd jenkins/${MATRIX_AXIS_PLATFORM}

# generate makefile

${DSERVER_PATH}/build/${PLATFORM_BUILD_FOLDER}/cmake_dserver.sh ${DSERVER_PATH} ${LIBWEINTEK_PATH} ${MARIADB_CONNECTOR_C_PATH} ${GOOGLE_BREAKPAD_PATH} ${INSTALL_PREFIX} ${CROSS_COMPILER_TOOLCHAIN} ${BUILD_TYPE}

# make

if [ &quot;${TRIGGER_PARAM_DSERVER_BUILD_POLICY}&quot; = &quot;clean&quot; ]; then
    make clean
fi
make install VERBOSE=1
cp ${INSTALL_PREFIX}/bin/dserver ${WORKSPACE}/artifacts/dserver.RelWithDebInfo

# strip and encrypt

make install/strip VERBOSE=1
if test -n &quot;${ENCRYPT_EXTENSION_NAME}&quot;; then
    /home/ci/work/crypto e ${INSTALL_PREFIX}/bin/dserver ${INSTALL_PREFIX}/bin/dserver${ENCRYPT_EXTENSION_NAME}
fi
cp ${INSTALL_PREFIX}/bin/dserver${ENCRYPT_EXTENSION_NAME} ${WORKSPACE}/artifacts
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>artifacts/*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.16">
      <recipients>jeremyhong@weintek.com knightchang@weintek.com</recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>