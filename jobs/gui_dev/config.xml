<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.6">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition plugin="matrix-combinations-parameter@1.0.9">
          <name>PLATFORMS_TO_BUILD</name>
          <description></description>
        </hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TRIGGER_PARAM_GUI_BRANCH</name>
          <description></description>
          <defaultValue>dev</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TRIGGER_PARAM_JOB_GROUP</name>
          <description></description>
          <defaultValue>dev</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>TRIGGER_PARAM_GUI_BUILD_POLICY</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>incremental</string>
              <string>clean</string>
              <string>brandnew</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>90</daysToKeep>
        <numToKeep>300</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>gitolite@192.168.1.220:gui.qt4.graphicsview.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/${TRIGGER_PARAM_GUI_BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.LabelAxis>
      <name>MATRIX_AXIS_NODE</name>
      <values>
        <string>linux</string>
        <string>windows</string>
      </values>
    </hudson.matrix.LabelAxis>
    <hudson.matrix.TextAxis>
      <name>MATRIX_AXIS_PLATFORM</name>
      <values>
        <string>cMT3000</string>
        <string>cMT-iv5</string>
        <string>cMT-iv5-3000</string>
        <string>win32</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>(MATRIX_AXIS_NODE == &quot;windows&quot; &amp;&amp; MATRIX_AXIS_PLATFORM == &quot;win32&quot;) || (MATRIX_AXIS_NODE != &quot;windows&quot; &amp;&amp; MATRIX_AXIS_PLATFORM != &quot;win32&quot;)</combinationFilter>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${MATRIX_AXIS_NODE}</arg1>
        <arg2>linux</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>#!/bin/bash

# alter trigger parameter

if [[ &quot;0000&quot; &lt; $(( `date +&quot;%H%M&quot;` )) &amp;&amp;  $(( `date +&quot;%H%M&quot;` )) &lt; &quot;0800&quot; ]]; then
	export TRIGGER_PARAM_DSERVER_BUILD_POLICY=brandnew
fi

# export variables

export GUI_PATH=${WORKSPACE}
export LIBWEINTEK_PATH=${JENKINS_HOME}/jobs/libweintek_${TRIGGER_PARAM_JOB_GROUP}/workspace
export DSERVER_PATH=${JENKINS_HOME}/jobs/dserver_${TRIGGER_PARAM_JOB_GROUP}/workspace
export INSTALL_PREFIX=/home/ci/work/${MATRIX_AXIS_PLATFORM}/build-${TRIGGER_PARAM_JOB_GROUP}-branch

case $MATRIX_AXIS_PLATFORM in
    &quot;cMT3000&quot;)       export CROSS_COMPILER_TOOLCHAIN=/home/ci/work/cMT3000/target/environment-setup-armv7ahf-vfp-neon-weintek-linux-gnueabi  ;;
    &quot;cMT-iv5&quot;)       export CROSS_COMPILER_TOOLCHAIN=/home/ci/work/cMT-iv5/target/environment-setup-armv7ahf-vfp-neon-weintek-linux-gnueabi  ;;
    &quot;cMT-iv5-3000&quot;)  export CROSS_COMPILER_TOOLCHAIN=/home/ci/work/cMT3000/target/environment-setup-armv7ahf-vfp-neon-weintek-linux-gnueabi  ;;
esac

case $MATRIX_AXIS_PLATFORM in
    &quot;cMT3000&quot;)       export BUILD_LIBRARY_ONLY=off  ;;
    &quot;cMT-iv5&quot;)       export BUILD_LIBRARY_ONLY=on   ;;
    &quot;cMT-iv5-3000&quot;)  export BUILD_LIBRARY_ONLY=on   ;;
    &quot;Ubuntu&quot;)        export BUILD_LIBRARY_ONLY=off  ;;
esac

case $MATRIX_AXIS_PLATFORM in
    &quot;cMT-iv5-3000&quot;)  export PLATFORM_BUILD_FOLDER=cMT-iv5  ;;
    *)               export PLATFORM_BUILD_FOLDER=${MATRIX_AXIS_PLATFORM}  ;;
esac

if [ &quot;${MATRIX_AXIS_PLATFORM}&quot; = &quot;cMT3000&quot; ]; then
   export ENCRYPT_EXTENSION_NAME=.c30
fi

if [ &quot;${MATRIX_AXIS_PLATFORM}&quot; = &quot;Ubuntu&quot; ]; then
   export PATH=/opt/Qt5.4.2/5.4/gcc_64/bin:${PATH}
fi

# clear artifacts

rm -f ${INSTALL_PREFIX}/bin/gui*
rm -f ${INSTALL_PREFIX}/lib/liblibgui20.a
rm -rf ${WORKSPACE}/artifacts
mkdir ${WORKSPACE}/artifacts

# prepare out-of-source build

cd ${GUI_PATH}/build
if [ &quot;${TRIGGER_PARAM_GUI_BUILD_POLICY}&quot; = &quot;brandnew&quot; ]; then
    rm -rf jenkins/${MATRIX_AXIS_PLATFORM}
fi
if [ ! -d &quot;jenkins&quot; ]; then
    mkdir -p jenkins
fi
if [ ! -d &quot;jenkins/${MATRIX_AXIS_PLATFORM}&quot; ]; then
    mkdir -p jenkins/${MATRIX_AXIS_PLATFORM}
fi
cd jenkins/${MATRIX_AXIS_PLATFORM}

# generate makefile

cp ${GUI_PATH}/build/${PLATFORM_BUILD_FOLDER}/features.pri .
${GUI_PATH}/build/${PLATFORM_BUILD_FOLDER}/qmake_gui.sh ${GUI_PATH} ${LIBWEINTEK_PATH} ${DSERVER_PATH} ${INSTALL_PREFIX} ${CROSS_COMPILER_TOOLCHAIN} RelWithDebInfo

# make

if test -n &quot;${CROSS_COMPILER_TOOLCHAIN}&quot;; then
    source ${CROSS_COMPILER_TOOLCHAIN}
fi

if [ &quot;${TRIGGER_PARAM_GUI_BUILD_POLICY}&quot; = &quot;clean&quot; ]; then
    make clean
fi
make VERBOSE=1

if [ &quot;${BUILD_LIBRARY_ONLY}&quot; = &quot;off&quot; ]; then
    cp ${INSTALL_PREFIX}/bin/gui ${WORKSPACE}/artifacts/gui.RelWithDebInfo
else
    cp ${INSTALL_PREFIX}/lib/liblibgui20.a ${WORKSPACE}/artifacts
fi

# strip and encrypt

if [ &quot;${BUILD_LIBRARY_ONLY}&quot; = &quot;off&quot; ] &amp;&amp; [ -e &quot;${INSTALL_PREFIX}/bin/gui&quot; ]; then
    strip ${INSTALL_PREFIX}/bin/gui
    
    if test -n &quot;${ENCRYPT_EXTENSION_NAME}&quot;; then
        test_mtcrypt --encrypt ${INSTALL_PREFIX}/bin/gui --out ${INSTALL_PREFIX}/bin/gui${ENCRYPT_EXTENSION_NAME}
    fi    
        
    cp ${INSTALL_PREFIX}/bin/gui${ENCRYPT_EXTENSION_NAME} ${WORKSPACE}/artifacts
fi
</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${MATRIX_AXIS_NODE}</arg1>
        <arg2>windows</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.BatchFile>
          <command>:: alter trigger parameter&#xd;
&#xd;
if &quot;%time%&quot; geq &quot;00:00:00.00&quot; ( if &quot;%time%&quot; lss &quot;08:00:00.00&quot; (&#xd;
    set TRIGGER_PARAM_LIBWEINTEK_BUILD_POLICY=clean&#xd;
))&#xd;
&#xd;
:: set variables&#xd;
&#xd;
set WORKSPACE_DIR=%cd%&#xd;
set WORK_UTIL_DIR=c:\jenkins\work&#xd;
set LIBWEINTEK_DIR=C:\jenkins\workspace\libweintek_%TRIGGER_PARAM_JOB_GROUP%\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32&#xd;
set DSERVER_DIR=C:\jenkins\workspace\dserver_%TRIGGER_PARAM_JOB_GROUP%\MATRIX_AXIS_NODE\windows\MATRIX_AXIS_PLATFORM\win32&#xd;
set QT_DIR=C:\DevEnv\Qt\Qt5.4.2\5.4\msvc2012_opengl&#xd;
&#xd;
:: clear artifacts&#xd;
&#xd;
rmdir /s %WORKSPACE_DIR%\artifacts&#xd;
mkdir %WORKSPACE_DIR%\artifacts&#xd;
&#xd;
:: prepare build environment&#xd;
&#xd;
cd %WORKSPACE_DIR%\build\vs2012&#xd;
mkdir testsRelease&#xd;
&#xd;
copy /y %LIBWEINTEK_DIR%\build\vs2012\build_win32.bat .&#xd;
copy /y got.props.in got.props&#xd;
copy /y %QT_DIR%\bin\Qt5Core.dll .\testsRelease&#xd;
copy /y %QT_DIR%\bin\icu*53.dll .\testsRelease&#xd;
&#xd;
call %WORK_UTIL_DIR%\script\replace_string.bat &quot;got.props&quot; &quot;&lt;WEINTEKDIR&gt;..\..\..\libweintek&lt;/WEINTEKDIR&gt;&quot; &quot;&lt;WEINTEKDIR&gt;%LIBWEINTEK_DIR%&lt;/WEINTEKDIR&gt;&quot;&#xd;
call %WORK_UTIL_DIR%\script\replace_string.bat &quot;got.props&quot; &quot;&lt;DSERVERDIR&gt;..\..\..\d-server&lt;/DSERVERDIR&gt;&quot; &quot;&lt;DSERVERDIR&gt;%DSERVER_DIR%&lt;/DSERVERDIR&gt;&quot;&#xd;
&#xd;
:: build project &#xd;
&#xd;
call build_win32.bat got release %TRIGGER_PARAM_GUI_BUILD_POLICY%&#xd;
copy /y gotRelease\got.exe %WORKSPACE_DIR%\artifacts&#xd;
copy /y Win32\Release\gui.exe %WORKSPACE_DIR%\artifacts&#xd;
copy /y Win32\Release\gui.pdb %WORKSPACE_DIR%\artifacts&#xd;
copy /y Win32\Release\libgui20.dll %WORKSPACE_DIR%\artifacts&#xd;
copy /y Win32\Release\libgui20.pdb %WORKSPACE_DIR%\artifacts&#xd;
</command>
        </hudson.tasks.BatchFile>
        <hudson.tasks.BatchFile>
          <command>mkdir gtest&#xd;
build\vs2012\testsRelease\tests.exe --gtest_output=xml:gtest\gtest-gui.xml</command>
        </hudson.tasks.BatchFile>
        <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.10">
          <testResults>gtest\*.xml</testResults>
          <keepLongStdio>false</keepLongStdio>
          <healthScaleFactor>1.0</healthScaleFactor>
          <allowEmptyResults>false</allowEmptyResults>
        </hudson.tasks.junit.JUnitResultArchiver>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>artifacts/*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.30">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs class="empty-list"/>
          <projects>viewer_dev</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
    <hudson.tasks.Mailer plugin="mailer@1.16">
      <recipients>katte@weintek.com paul@weintek.com zen@weintek.com easonwu@weintek.com jeremyhong@weintek.com clydeliu@weintek.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>