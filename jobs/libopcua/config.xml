<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.6">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.scm.SCM.Tag:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:jeremyhong</permission>
      <permission>hudson.model.Item.Read:jeremyhong</permission>
      <permission>hudson.model.Item.ExtendedRead:jeremyhong</permission>
      <permission>hudson.model.Item.Workspace:jeremyhong</permission>
      <permission>hudson.model.Item.Configure:jeremyhong</permission>
      <permission>hudson.model.Run.Delete:jeremyhong</permission>
      <permission>hudson.model.Item.Discover:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:jeremyhong</permission>
      <permission>hudson.model.Item.Build:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:jeremyhong</permission>
      <permission>hudson.model.Item.Cancel:jeremyhong</permission>
      <permission>hudson.model.Item.Delete:jeremyhong</permission>
      <permission>hudson.model.Run.Update:jeremyhong</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:jeremyhong</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition plugin="matrix-combinations-parameter@1.0.9">
          <name>PLATFORMS_TO_BUILD</name>
          <description></description>
        </hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TRIGGER_PARAM_JOB_GROUP</name>
          <description></description>
          <defaultValue>dev</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>TRIGGER_PARAM_OPCSDK_BUILD_POLICY</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>incremental</string>
              <string>clean</string>
              <string>brandnew</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>90</daysToKeep>
        <numToKeep>300</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H H(0-5) * * *</spec>
    </hudson.triggers.TimerTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>H/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>MATRIX_AXIS_PLATFORM</name>
      <values>
        <string>cMT-SVR</string>
        <string>cMT3000</string>
        <string>win32</string>
      </values>
    </hudson.matrix.TextAxis>
    <org.jenkinsci.plugins.elasticaxisplugin.ElasticAxis plugin="elastic-axis@1.2">
      <name>MATRIX_AXIS_NODE</name>
      <values>
        <string>master</string>
        <string>windows</string>
      </values>
      <label>linux,windows</label>
      <ignoreOffline>true</ignoreOffline>
    </org.jenkinsci.plugins.elasticaxisplugin.ElasticAxis>
  </axes>
  <combinationFilter>(MATRIX_AXIS_NODE == &quot;windows&quot; &amp;&amp; MATRIX_AXIS_PLATFORM == &quot;win32&quot;) || (MATRIX_AXIS_NODE != &quot;windows&quot; &amp;&amp; MATRIX_AXIS_PLATFORM != &quot;win32&quot;)</combinationFilter>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${MATRIX_AXIS_NODE}</arg1>
        <arg2>master</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>#!/bin/bash

# Build libopcua
echo &quot;================================ libopcua ================================ libopcua ================================ libopcua ================================&quot;

# alter trigger parameter

if [[ ! &quot;`date +&quot;%H%M&quot;`&quot; &lt; &quot;0000&quot; &amp;&amp; ! &quot;`date +&quot;%H%M&quot;`&quot; &gt; &quot;0800&quot; ]]; then
	export TRIGGER_PARAM_OPCSDK_BUILD_POLICY=brandnew
fi

# Copy files from disk

if [ &quot;${TRIGGER_PARAM_OPCSDK_BUILD_POLICY}&quot; = &quot;brandnew&quot; ]; then
	rm -rf ${WORKSPACE}/libopcua
fi

if [ ! -e ${WORKSPACE}/libopcua ]; then
	cp -r /home/ci/projects/libopcua ${WORKSPACE}
fi

# export variables

export LIBOPCUA_PATH=${WORKSPACE}/libopcua/linux
export INSTALL_PREFIX=/home/ci/work/${MATRIX_AXIS_PLATFORM}/build-${TRIGGER_PARAM_JOB_GROUP}-branch

case $MATRIX_AXIS_PLATFORM in
	&quot;cMT-SVR&quot;)       export CROSS_COMPILER_TOOLCHAIN=${JENKINS_HOME}/jobs/libweintek_${TRIGGER_PARAM_JOB_GROUP}/workspace/build/cMT-SVR/Toolchain-arm-fsl-linux-gnueabi.cmake ;;
    &quot;cMT3000&quot;)       export CROSS_COMPILER_TOOLCHAIN=/home/ci/work/cMT3000/target/environment-setup-armv7ahf-vfp-neon-weintek-linux-gnueabi  ;;
    &quot;cMT-iv5&quot;)       export CROSS_COMPILER_TOOLCHAIN=/home/ci/work/cMT-iv5/target/environment-setup-armv7ahf-vfp-neon-weintek-linux-gnueabi  ;;
    &quot;cMT-iv5-3000&quot;)  export CROSS_COMPILER_TOOLCHAIN=/home/ci/work/cMT3000/target/environment-setup-armv7ahf-vfp-neon-weintek-linux-gnueabi  ;;
esac

case $MATRIX_AXIS_PLATFORM in
    &quot;cMT-iv5-3000&quot;)  export PLATFORM_BUILD_FOLDER=cMT3000  ;;
    *)               export PLATFORM_BUILD_FOLDER=${MATRIX_AXIS_PLATFORM}  ;;
esac

# clear artifacts

rm -f ${INSTALL_PREFIX}/lib/libcoremodule*.a
rm -f ${INSTALL_PREFIX}/lib/libua*.a
rm -f ${INSTALL_PREFIX}/lib/libxmlparser*.a

# prepare out-of-source build

cd ${LIBOPCUA_PATH}/build
if [ &quot;${TRIGGER_PARAM_OPCSDK_BUILD_POLICY}&quot; = &quot;brandnew&quot; ]; then
    rm -rf jenkins/${MATRIX_AXIS_PLATFORM}
fi
if [ ! -d &quot;jenkins&quot; ]; then
    mkdir -p jenkins
fi
if [ ! -d &quot;jenkins/${MATRIX_AXIS_PLATFORM}&quot; ]; then
    mkdir -p jenkins/${MATRIX_AXIS_PLATFORM}
fi
cd jenkins/${MATRIX_AXIS_PLATFORM}

# generate makefile

echo &quot;${LIBOPCUA_PATH}/build/${PLATFORM_BUILD_FOLDER}/cmake_opcua_sdk.sh ${LIBOPCUA_PATH} ${CROSS_COMPILER_TOOLCHAIN} ${INSTALL_PREFIX} Release OFF&quot;
${LIBOPCUA_PATH}/build/${PLATFORM_BUILD_FOLDER}/cmake_opcua_sdk.sh ${LIBOPCUA_PATH} ${CROSS_COMPILER_TOOLCHAIN} ${INSTALL_PREFIX} Release OFF

# make

if [ &quot;${TRIGGER_PARAM_OPCSDK_BUILD_POLICY}&quot; = &quot;clean&quot; ]; then
    make clean
fi

make install VERBOSE=1

mkdir ${WORKSPACE}/artifacts
rm -rf ${WORKSPACE}/artifacts/*
cp ${INSTALL_PREFIX}/lib/libcoremodule*.a ${INSTALL_PREFIX}/lib/libua*.a ${INSTALL_PREFIX}/lib/libxmlparser*.a ${WORKSPACE}/artifacts</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${MATRIX_AXIS_NODE}</arg1>
        <arg2>windows</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.BatchFile>
          <command></command>
        </hudson.tasks.BatchFile>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>artifacts/*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.plugins.claim.ClaimPublisher plugin="claim@2.8"/>
    <hudson.tasks.Mailer plugin="mailer@1.16">
      <recipients>jeremyhong@weintek.com</recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>